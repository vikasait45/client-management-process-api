<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="retrieveclient-management-process-api-test-suite.xml" />
	<munit:test name="retrieveclient-management-process-api-test-suite-get:\clients:client-management-process-api-configTest" doc:id="5e7a8c4b-2814-4800-8d17-22f2f797b36d" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock file read" doc:id="48a82ac9-af61-44a7-a7aa-b98663b8d56e" processor="file:read">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Read" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="4587f09e-5ee2-496f-9672-d6fc8c161c96" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Client_File_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('getClientMock.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<logger level="INFO" doc:name="Logger" doc:id="23baf2cc-ddff-4b68-a3fd-43b4cf5bee2a" message="Start of Munit for get flow for success flow"/>
			<flow-ref doc:name="Flow-ref to get:\clients:client-management-process-api-config" doc:id="d019f26e-6b90-43e4-9f41-0bc193e67831" name="get:\clients:client-management-process-api-config"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger" doc:id="5d97c26d-a7fa-44dc-94bb-bec88ce473de" message="payload in munit is: #[payload]"/>
			<munit-tools:assert-that doc:name="Assert that" doc:id="1ee56720-0abb-45fa-862f-cf35c5ac5c26" is="#[MunitTools::notNullValue()]" message="Payload is null" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="retrieveclient-management-process-api-test-suite-get:\clients:client-management-process-api-configTest-Exception-404" doc:id="70fdce8e-1e32-4081-93fc-a582e6a37935" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock file read" doc:id="f5ed3c7d-fadc-4e6a-bafa-306e3487e1eb" processor="file:read">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Read" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="4587f09e-5ee2-496f-9672-d6fc8c161c96" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Client_File_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('getClientMock.json')]" mediaType="application/json" />
					<munit-tools:error typeId='#["FILE:ILLEGAL_PATH"]' />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<logger level="INFO" doc:name="Logger" doc:id="57ca5a6a-e904-4101-911a-031c64dfad0e" message="Start of Munit for get flow for 404 exception"/>
			<flow-ref doc:name="Flow-ref to get:\clients:client-management-process-api-config" doc:id="001055ee-476a-4893-b38b-d3557c476d71" name="get:\clients:client-management-process-api-config"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger" doc:id="bc1742d9-2cb4-474a-a3be-9ba57fd61ef4" message="payload in munit is: #[payload]"/>
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="b90adb7e-ab7e-4cf2-8beb-bef59f3c85b6" actual="#[payload.errorCode]" expected="#[404]" message="ErrorCode is not 404"/>
		
</munit:validation>
	</munit:test>
	
	<munit:test name="retrieveclient-management-process-api-test-suite-get:\clients:client-management-process-api-configTest-Exception-500" doc:id="17ab1eab-2081-4e83-893e-99ebc0516d82" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock file read" doc:id="ba92f48e-06b2-41d9-9ece-2f0b61ef6678" processor="file:read">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Read" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="4587f09e-5ee2-496f-9672-d6fc8c161c96" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Client_File_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('getClientMock.json')]" mediaType="application/json" />
					<munit-tools:error typeId='#["ANY"]' />
				</munit-tools:then-return>
			

</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<logger level="INFO" doc:name="Logger" doc:id="ec8f4779-9890-4734-a95a-1e1ad3dbf7ea" message="Start of Munit for get flow for 500 exception"/>
			<flow-ref doc:name="Flow-ref to get:\clients:client-management-process-api-config" doc:id="e074557f-667d-4138-8ce1-151cbdde420a" name="get:\clients:client-management-process-api-config"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger" doc:id="53cbeeca-b4af-45bc-b226-7fe93f3440b4" message="payload in munit is: #[payload]"/>
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="6113823f-047a-4f9d-b2f7-0683c7d80209" actual="#[payload.errorCode]" expected="#[500]" message="errorcode is not 500"/>
		
</munit:validation>
	</munit:test>


</mule>
